// Code generated by entc, DO NOT EDIT.

package objecttype

import (
	"github.com/knabben/ggql/ent/schema"
)

const (
	// Label holds the string label denoting the objecttype type in the database.
	Label = "object_type"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name vertex property in the database.
	FieldName = "name"

	// Table holds the table name of the objecttype in the database.
	Table = "object_types"
	// FieldsTable is the table the holds the fields relation/edge.
	FieldsTable = "field_types"
	// FieldsInverseTable is the table name for the FieldType entity.
	// It exists in this package in order to avoid circular dependency with the "fieldtype" package.
	FieldsInverseTable = "field_types"
	// FieldsColumn is the table column denoting the fields relation/edge.
	FieldsColumn = "object_type_fields"
)

// Columns holds all SQL columns for objecttype fields.
var Columns = []string{
	FieldID,
	FieldName,
}

var (
	fields = schema.ObjectType{}.Fields()

	// descName is the schema descriptor for name field.
	descName = fields[0].Descriptor()
	// DefaultName holds the default value on creation for the name field.
	DefaultName = descName.Default.(string)
)
